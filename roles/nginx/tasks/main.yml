- name: Ensure nginx conf dir exists
  file:
    path: "{{ nginx_data_dir }}"
    state: directory

- name: Check if cert files exist
  stat:
    path: "{{ certbot_data_dir }}/live/{{ item }}"
  loop: "{{ server_names|flatten(levels=1) }}"
  register: certbot_certs

# - name: Debug certbot_certs
#   debug:
#     msg: "{{ certbot_certs.results | json_query('stat.exists') }}"

- name: Copy nginx certbot conf
  template:
    src: templates/nginx-certbot.conf
    dest: "{{ nginx_data_dir }}/{{ item.item }}.conf"
  vars:
    server_name: "{{ item.item }}"
  loop: "{{ certbot_certs.results }}"
  when: not item.stat.exists

- name: Start nginx container
  docker_container:
    name: "{{ nginx_hostname }}"
    image: "{{ nginx_image }}"
    ports:
      - 80:80
    volumes:
      - "{{ nginx_data_dir }}/:/etc/nginx/conf.d/:ro"
      - "{{ certbot_data_dir }}/:/etc/letsencrypt/"
      - "{{ certbot_data_dir }}/www/:/var/www/certbot/"
    log_driver: "{{ log_driver }}"
    log_options:
      max-size: "{{ log_max_size }}"
      max-file: "{{ log_max_file }}"
#  when: not certbot_certs.stat.exists

# - name: Debug certbot_certs_required
#   debug:
#     var: certbot_certs_required

- name: Wait for nginx container
  pause:
    seconds: 3
#  when: not certbot_certs.stat.exists

- name: Issue certificate with certbot command
  docker_container:
    name: "{{ certbot_hostname }}"
    image: "{{ certbot_image }}"
    volumes:
      - "{{ certbot_data_dir }}/:/etc/letsencrypt/"
      - "{{ certbot_data_dir }}/www/:/var/www/certbot/"
    command: certonly --webroot --email {{ certbot_email }} --agree-tos --webroot-path=/var/www/certbot/ -d {{ item.item }}
  loop: "{{ certbot_certs.results }}"
  when: not item.stat.exists

- name: Wait for certificate request
  pause:
    seconds: 3
#  when: not certbot_certs.stat.exists

# - name: Debug nginx_proxies
#   debug:
#     var: nginx_proxies

- name: Copy nginx proxy conf
  template:
    src: templates/nginx-proxy.conf
    dest: "{{ nginx_data_dir }}/{{ item.src_hostname }}.conf"
  vars:
    src_hostname: "{{ item.src_hostname }}"
    src_port: "{{ item.src_port }}"
    dest_hostname: "{{ item.dest_hostname }}"
    dest_port: "{{ item.dest_port }}"
  loop: "{{ nginx_proxies }}"
  notify: Restart nginx container

- name: Copy nginx ssl param conf
  copy:
    src: "{{ item }}"
    dest: "{{ certbot_data_dir }}/"
  with_items:
    - files/options-ssl-nginx.conf
    - files/ssl-dhparams.pem

- name: Start nginx container
  docker_container:
    name: "{{ nginx_hostname }}"
    image: "{{ nginx_image }}"
    ports:
      - 80:80
      - 443:443
    volumes:
      - "{{ nginx_data_dir }}/:/etc/nginx/conf.d/:ro"
      - "{{ certbot_data_dir }}/:/etc/letsencrypt/"
      - "{{ certbot_data_dir }}/www/:/var/www/certbot/"
    networks:
      - name: "{{ network_name }}"
    log_driver: "{{ log_driver }}"
    log_options:
      max-size: "{{ log_max_size }}"
      max-file: "{{ log_max_file }}"
