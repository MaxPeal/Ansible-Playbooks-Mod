certbot_image: certbot/certbot
certbot_hostname: cert01
certbot_data_dir: /usr/share/certbot
certbot_email: info@mint-system.ch
certbot_stat_filter: "results[*] | [?stat.exists==`false`].item"

nginx_image: nginx:1.15-alpine
nginx_hostname: proxy01
nginx_data_dir: /usr/share/nginx
nginx_proxies:
  - src_hostname: wiki.mint-system.ch
    src_port: 443
    dest_hostname: book01
    dest_port: 80
  - src_hostname: odoo.mint-system.ch
    src_port: 443
    dest_hostname: odoo01
    dest_port: 8069
  - src_hostname: cloud.mint-system.ch
    src_port: 443
    dest_hostname: nextcloud01
    dest_port: 80

modsecurity_image: owasp/modsecurity:3-nginx
modsecurity_data_dir: /usr/share/modsecurity
modsecurity_crs_url: "https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v3.2.0.tar.gz"
# Options: On, DetectionOnly
modsecurity_engine_mode: "On"
modsecurity_default_action: "phase:1,deny,log"
modsecurity_http_allowed_methods: "GET HEAD POST OPTIONS PUT PATCH DELETE CHECKOUT COPY DELETE LOCK MERGE MKACTIVITY MKCOL MOVE PROPFIND PROPPATCH PUT UNLOCK"
modsecurity_request_allowed_content_type: "application/x-www-form-urlencoded|multipart/form-data|text/xml|application/xml|application/soap+xml|application/x-amf|application/json|application/octet-stream|application/csp-report|application/xss-auditor-report|text/plain|image/png"
modsecurity_exclude_rules_before_crs:
  - |
    # ModSecurity Rule Exclusion: Disable all SQLi and XSS rules for /books request uri
    SecRule REQUEST_URI "@beginsWith /books" \
        "id:1000,\
        phase:1,\
        pass,\
        nolog,\
        ctl:ruleRemoveById=941000-942999"
